import pandas as pd
from datetime import date

# Sample dictionary (replace this with your actual dictionary)
date_dict = {
    date(2024, 1, 15): 100,
    date(2024, 3, 20): 150,
    date(2024, 7, 5): 200,
    date(2024, 9, 10): 250,
    date(2024, 12, 25): 300
}

# Create DataFrame
df = pd.DataFrame(list(date_dict.items()), columns=['Date', 'Value'])

# Add Quarter column
df['Quarter'] = df['Date'].dt.to_period('Q').apply(lambda r: f'Q{r.quarter} {r.year}')

# Add Month column
df['Month'] = df['Date'].dt.strftime('%b-%Y')

# Display the result
print(df)

#mask = df.apply(lambda row: row.astype(str).str.contains('LHU', case=False).any(), axis=1)
#result = df.loc[mask.idxmax():].reset_index(drop=True)

import pandas as pd

# Sample DataFrame
data = {
    'Column1': [1.0, -2.0, 3.0, 4.0],
    'Column2': [5.0, 6.0, -7.0, 8.0],
    'Column3': [9.0, 10.0, 11.0, -12.0],
    'Column4': ['a', 'b', 'c', 'd']  # Assuming this column is not numeric
}

df = pd.DataFrame(data)

# Function to format negative numbers with brackets and color
def format_negative(val):
    if isinstance(val, (int, float)) and val < 0:
        return f'<span style="color:red;">[{val}]</span>'
    else:
        return val

# Apply the function to the numeric columns
df_formatted = df.applymap(format_negative)

# Convert the DataFrame to an HTML table
html_table = df_formatted.to_html(escape=False)

# Print the HTML table
print(html_table)
